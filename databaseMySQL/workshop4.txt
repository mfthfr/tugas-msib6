Jawaban Soal 4.1
1. Jawab:
    MariaDB [dbpos_sib6]> SELECT pesanan.id, pesanan.tanggal, pesanan. total, pelanggan.kode, pelanggan.nama,
    -> kartu.nama as nama_kartu, kartu.diskon
    -> FROM pesanan INNER JOIN pelanggan ON pesanan.pelanggan_id = pelanggan.id
    -> INNER JOIN kartu ON pelanggan.kartu_id = kartu.id;
    +----+------------+---------+------+--------------------+---------------+--------+
    | id | tanggal    | total   | kode | nama               | nama_kartu    | diskon |
    +----+------------+---------+------+--------------------+---------------+--------+
    |  1 | 2015-11-04 | 9720000 | C001 | Agung Sedayu Group | Gold Utama    |   0.05 |
    |  2 | 2015-11-04 |   17500 | C003 | Sekar Mirah        | Gold Utama    |   0.05 |
    |  3 | 2015-11-04 |       0 | C006 | Gayatri Dwi        | Gold Utama    |   0.05 |
    |  4 | 2015-11-04 |       0 | C007 | Dewi Gyat          | Gold Utama    |   0.05 |
    |  5 | 2015-11-04 |       0 | C010 | Cassanndra         | Gold Utama    |   0.05 |
    |  6 | 2015-11-04 |       0 | C002 | Pandan Wangi       | Platinum Jaya |    0.1 |
    |  7 | 2015-11-04 |       0 | C005 | Pradabashu         | Platinum Jaya |    0.1 |
    |  8 | 2015-11-04 |       0 | C004 | Swandaru Geni      | Non Member    |      0 |
    |  9 | 2015-11-04 |       0 | C008 | Andre Haru         | Non Member    |      0 |
    | 10 | 2015-11-04 |       0 | C009 | Ahmad Hasan        | Non Member    |      0 |
    | 11 | 2015-11-04 |   30000 | C009 | Ahmad Hasan        | Non Member    |      0 |
    +----+------------+---------+------+--------------------+---------------+--------+
    11 rows in set (0.010 sec)
2. Jawab:
    MariaDB [dbpos_sib6]> SELECT pembelian.id, pembelian.tanggal, pembelian.nomor, pembelian.jumlah, pembelian.harga,
    -> produk.nama, vendor.nama, vendor.kontak FROM pembelian INNER JOIN produk
    -> ON pembelian.produk_id = produk.id
    -> INNER JOIN vendor ON pembelian.vendor_id = vendor.id;
    +----+------------+-------+--------+---------+-------------------+----------------------+-----------------+
    | id | tanggal    | nomor | jumlah | harga   | nama              | nama                 | kontak          |
    +----+------------+-------+--------+---------+-------------------+----------------------+-----------------+
    |  1 | 2019-10-10 | P001  |      2 | 3500000 | Televisi 21 inchs | PT Guna Samudra      | Ali Nurdin      |
    |  2 | 2019-11-20 | P002  |      5 | 5500000 | Televisi 40 inch  | PT Pondok C9         | Putri Ramadhani |
    |  3 | 2019-12-12 | P003  |      5 | 5400000 | Televisi 40 inch  | PT Guna Samudra      | Ali Nurdin      |
    |  4 | 2020-01-20 | P004  |    200 |    1800 | Teh Botol         | CV Jaya Raya Semesta | Dwi Rahayu      |
    |  5 | 2020-01-20 | P005  |    100 |    2300 | Teh Kotak         | CV Jaya Raya Semesta | Dwi Rahayu      |
    +----+------------+-------+--------+---------+-------------------+----------------------+-----------------+
    5 rows in set (0.007 sec)
3. Jawab:
    MariaDB [dbpos_sib6]> SELECT
    -> pesanan.id, pesanan.tanggal, pesanan.total,
    -> pelanggan.nama,
    -> produk.kode, produk.nama,
    -> jenis_produk.nama,
    -> pesanan_items.qty, pesanan_items.harga
    -> FROM pesanan
    -> JOIN pelanggan ON pesanan.pelanggan_id = pelanggan.id
    -> JOIN pesanan_items ON pesanan.id = pesanan_items.pesanan_id
    -> JOIN produk ON pesanan_items.produk_id = produk.id
    -> INNER JOIN jenis_produk ON produk.jenis_produk_id = jenis_produk.id;
    +----+------------+---------+--------------------+------+-------------------+-------------+------+---------+
    | id | tanggal    | total   | nama               | kode | nama              | nama        | qty  | harga   |
    +----+------------+---------+--------------------+------+-------------------+-------------+------+---------+
    |  1 | 2015-11-04 | 9720000 | Agung Sedayu Group | TV01 | Televisi 21 inchs | elektroniks |    1 | 5040000 |
    |  1 | 2015-11-04 | 9720000 | Agung Sedayu Group | K001 | Kulkas 2 pintu    | elektroniks |    1 | 4680000 |
    |  2 | 2015-11-04 |   17500 | Sekar Mirah        | TK01 | Teh Kotak         | minuman     |    5 |    3500 |
    |  3 | 2015-11-04 |       0 | Gayatri Dwi        | TK01 | Teh Kotak         | minuman     |   10 |    3500 |
    |  3 | 2015-11-04 |       0 | Gayatri Dwi        | TV01 | Televisi 21 inchs | elektroniks |    1 | 5040000 |
    |  5 | 2015-11-04 |       0 | Cassanndra         | TK01 | Teh Kotak         | minuman     |   10 |    3500 |
    |  6 | 2015-11-04 |       0 | Pandan Wangi       | TK01 | Teh Kotak         | minuman     |   20 |    3500 |
    +----+------------+---------+--------------------+------+-------------------+-------------+------+---------+
    7 rows in set (0.002 sec)

Jawaban Soal 4.2
1. Jawab:
    MariaDB [dbpos_sib6]> CREATE VIEW pesanan_pelanggan_kartu
        -> AS SELECT pesanan.id, pesanan.tanggal, pesanan. total, pelanggan.kode, pelanggan.nama,
        -> kartu.nama as nama_kartu, kartu.diskon
        -> FROM pesanan INNER JOIN pelanggan ON pesanan.pelanggan_id = pelanggan.id
        -> INNER JOIN kartu ON pelanggan.kartu_id = kartu.id;

2. Jawab:
    MariaDB [dbpos_sib6]> CREATE VIEW pembelian_produk_vendor
        -> AS SELECT p.id, p.tanggal, p.nomor, p.jumlah, p.harga,
        -> pr.nama, v.nama as nama_vendor, v.kontak FROM pembelian p INNER JOIN produk pr
        -> ON p.produk_id = pr.id
        -> INNER JOIN vendor v ON p.vendor_id = v.id;
        
3. Jawab:
    MariaDB [dbpos_sib6]> CREATE VIEW pesanan_pelanggan_produk_jenisProduk_pesananItems AS
    -> SELECT
    -> p.id AS "ID Pesanan",
    -> p.tanggal AS "Tanggal Pesanan",
    -> p.total AS "Total Pesanan",
    -> pel.nama AS "Nama Pelanggan",
    -> prod.kode AS "Kode Produk",
    -> prod.nama AS "Nama Produk",
    -> jp.nama AS "Jenis Produk",
    -> pi.qty AS "Qty",
    -> pi.harga AS "Harga Jual"
    -> FROM Pesanan p
    -> JOIN Pelanggan pel ON p.pelanggan_id = pel.id
    -> JOIN Pesanan_Items pi ON p.id = pi.pesanan_id
    -> JOIN Produk prod ON pi.produk_id = prod.id
    -> INNER JOIN Jenis_Produk jp ON prod.jenis_produk_id = jp.id;
    Query OK, 0 rows affected (0.083 sec)

    Hasil:
    MariaDB [dbpos_sib6]> SELECT * FROM pesanan_pelanggan_produk_jenisProduk_pesananItems;
    +------------+-----------------+---------------+--------------------+-------------+-------------------+--------------+------+------------+
    | ID Pesanan | Tanggal Pesanan | Total Pesanan | Nama Pelanggan     | Kode Produk | Nama Produk       | Jenis Produk | Qty  | Harga Jual |
    +------------+-----------------+---------------+--------------------+-------------+-------------------+--------------+------+------------+
    |          1 | 2015-11-04      |       9720000 | Agung Sedayu Group | TV01        | Televisi 21 inchs | elektroniks  |    1 |    5040000 |
    |          1 | 2015-11-04      |       9720000 | Agung Sedayu Group | K001        | Kulkas 2 pintu    | elektroniks  |    1 |    4680000 |
    |          2 | 2015-11-04      |         17500 | Sekar Mirah        | TK01        | Teh Kotak         | minuman      |    5 |       3500 |
    |          3 | 2015-11-04      |             0 | Gayatri Dwi        | TK01        | Teh Kotak         | minuman      |   10 |       3500 |
    |          3 | 2015-11-04      |             0 | Gayatri Dwi        | TV01        | Televisi 21 inchs | elektroniks  |    1 |    5040000 |
    |          5 | 2015-11-04      |             0 | Cassanndra         | TK01        | Teh Kotak         | minuman      |   10 |       3500 |
    |          6 | 2015-11-04      |             0 | Pandan Wangi       | TK01        | Teh Kotak         | minuman      |   20 |       3500 |
    +------------+-----------------+---------------+--------------------+-------------+-------------------+--------------+------+------------+
    7 rows in set (0.688 sec)

Jawaban Soal 4.4
1. Jawab:
    ● Mulai transaction
        MariaDB [dbpos_sib6]> START TRANSACTION;
        Query OK, 0 rows affected (0.000 sec)
    ● Insert data produk sebanyak 3 record
        MariaDB [dbpos_sib6]> INSERT INTO produk (kode, nama, harga_beli, harga_jual, stok, min_stok, foto, deskripsi, jenis_produk_id)
            -> VALUES
            -> ('TV0123', 'SHARP', 6500000, 8500000, 5, 10, 'sharp.jpg', 'TV Sharp dengan Tampilan Tajam, Kualitas Terpercaya', 1),
            -> ('TV0124', 'POLYTRON', 5500000, 7500000, 8, 10, 'polytron.jpg', 'TV inovatif, terjangkau, dan handal', 1),
            -> ('THP003', 'Teh Pucuk 1,5 Liter', 10000, 13000, 30, 50, 'pucuk.jpg', 'Lebih banyak dan menyegarkan', 4);
        Query OK, 3 rows affected (0.691 sec)
        Records: 3  Duplicates: 0  Warnings: 0
    ● Update data stok salah satu produk
        MariaDB [dbpos_sib6]> UPDATE produk SET stok = 20 WHERE kode = 'THP003';
        Query OK, 1 row affected (0.691 sec)
        Rows matched: 1  Changed: 1  Warnings: 0
    ● Buat savepoint
        MariaDB [dbpos_sib6]> SAVEPOINT hapus_pembayaran;
        Query OK, 0 rows affected (0.000 sec)
    ● Hapus salah satu data pembayaran
        MariaDB [dbpos_sib6]> DELETE FROM pembayaran WHERE id = 4;
        Query OK, 1 row affected (0.015 sec)
    ● Kembali ke savepoint
        MariaDB [dbpos_sib6]> ROLLBACK TO hapus_pembayaran;
        Query OK, 0 rows affected (0.693 sec)
    ● Update data iuran salah satu kartu
        MariaDB [dbpos_sib6]> UPDATE kartu SET iuran = 10000 WHERE id = 7;
        Query OK, 1 row affected (0.001 sec)
        Rows matched: 1  Changed: 1  Warnings: 0
    ● Akhiri transaction dengan commit
        MariaDB [dbpos_sib6]> COMMIT;
        Query OK, 0 rows affected (0.009 sec)

2. Jawab:
    LOCK TABLES READ digunakan untuk mengunci tabel dalam mode read only, dengan kata lain dapat diartikan bahwa pengguna lain
    dapat membaca data pada tabel yang dikunci namun mereka tidak dapat mengubah data tersebut. Hal tersebut biasanya digunakan
    dalam kondisi atau situasi: 
        Membaca data dari tabel tanpa perlu melakukan perubahan (untuk mencegah data diubah oleh pengguna lain)
        Backup Database (untuk memastikan bahwa data di dalam tabel tidak berubah selama proses backup)

3. Jawab:
    LOCK TABLES WRITE digunakan untuk mengunci tabel dalam mode write only, dengan kata lain dapat diartikan bahwa pengguna lain
    tidak dapat mengubah atau membaca data dari tabel yang dikunci. Hal tersebut biasanya digunakan dalam kondisi atau situasi:
        Membuat perubahan pada data dalam tabel (untuk memastikan perubahan yang dilakukan tidak terganggu oleh pengguna lain)
        Melakukan operasi yang berpotensi merusak data, seperti menghapus data atau mengubah struktur tabel (untuk mencegah 
        pengguna lain mengakses tabel tersebut dan berisiko merusak data)
